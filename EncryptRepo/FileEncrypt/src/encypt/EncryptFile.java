/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package encypt;

import java.io.File;
import javax.swing.JFileChooser;

//   file filter https://stackoverflow.com/questions/5603966/how-to-make-filefilter-in-java

/**
 *
 * @author boconnell
 */
public class EncryptFile extends javax.swing.JFrame {
    

    
    FileIntegrityStatus EncryptKeyFile = null;
    FileIntegrityStatus filesPreEncrypt = null;
    FileIntegrityStatus filesPostEncrypt = null;
    
    // Encrypt File
    
    /**
     * Creates new form EncryptFile
     */
    public EncryptFile() {
        initComponents();
        initComponents2();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void initComponents2() {
    
    // This needs a second look
    buttonBrowseTarget.setEnabled(false);
    comboBoxFileType.setModel(SetupFile.getFileSuffix());
    }
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label1 = new javax.swing.JLabel();
        comboBoxFileType = new javax.swing.JComboBox<>();
        LabelEncryptKeyFile = new javax.swing.JLabel();
        TextFieldEncryptKeyFile = new javax.swing.JTextField();
        buttonBrowse = new javax.swing.JButton();
        LabelSourceFile = new javax.swing.JLabel();
        textFieldSourceFile = new javax.swing.JTextField();
        ButtonTargetFilePath = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        textFieldEncrptedDirectory = new javax.swing.JTextField();
        buttonBrowseTarget = new javax.swing.JButton();
        labelDone1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboBoxSelectedFiles = new javax.swing.JComboBox<>();
        labelDone2 = new javax.swing.JLabel();
        labelSelectedFiles = new javax.swing.JLabel();
        labelSelectDirectMessage = new javax.swing.JLabel();
        exitButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        labelErrorMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Input File designed by Bryan O'Connell"));

        label1.setText("File type");

        comboBoxFileType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pdf", "Jpeg", "Word", "Excel", "Text", "Other" }));
        comboBoxFileType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxFileTypeActionPerformed(evt);
            }
        });

        LabelEncryptKeyFile.setText("Encryption Key File");

        TextFieldEncryptKeyFile.setText("Encryption Key file here");
        TextFieldEncryptKeyFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldEncryptKeyFileActionPerformed(evt);
            }
        });

        buttonBrowse.setText("Browse");
        buttonBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBrowseActionPerformed(evt);
            }
        });

        LabelSourceFile.setText("File to be Encrypted:");

        textFieldSourceFile.setText("Source file here");

        ButtonTargetFilePath.setText("Browse");
        ButtonTargetFilePath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonTargetFilePathActionPerformed(evt);
            }
        });

        jLabel1.setText("File (Encrypted Result):");

        textFieldEncrptedDirectory.setText("Encrypted Directory Path here");

        buttonBrowseTarget.setText("Browse");
        buttonBrowseTarget.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBrowseTargetActionPerformed(evt);
            }
        });

        labelDone1.setForeground(new java.awt.Color(0, 255, 0));
        labelDone1.setText("                        ");

        jLabel2.setText("Selected Files");

        comboBoxSelectedFiles.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        labelSelectDirectMessage.setText("         ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldEncrptedDirectory)
                            .addComponent(comboBoxSelectedFiles, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelSelectedFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(LabelEncryptKeyFile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(LabelSourceFile, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comboBoxFileType, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(textFieldSourceFile, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(TextFieldEncryptKeyFile, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buttonBrowseTarget, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonBrowse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonTargetFilePath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelDone1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDone2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSelectDirectMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(218, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label1)
                    .addComponent(comboBoxFileType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelEncryptKeyFile, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextFieldEncryptKeyFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonBrowse)
                    .addComponent(labelDone1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelDone2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(LabelSourceFile, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textFieldSourceFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ButtonTargetFilePath)))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboBoxSelectedFiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelSelectedFiles, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelSelectDirectMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textFieldEncrptedDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(buttonBrowseTarget)))
                .addContainerGap())
        );

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        labelErrorMessage.setText("Error Message:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(labelErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(311, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exitButton)
                        .addGap(246, 246, 246))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exitButton)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(927, 496));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBrowseActionPerformed
        // TODO add your handling code here:
        
         
        try {
            JFileChooser chooser = new JFileChooser(SetupFile.FILE_PATH);
            chooser.setFileSelectionMode(JFileChooser.FILES_ONLY );
            chooser.showOpenDialog(null);
            File file = chooser.getSelectedFile();
            // Encrypt keyfile must be a jpeg File
            EncryptKeyFile = new FileIntegrityStatus(file);
            EncryptKeyFile.updateFileData();
            String filename = file.getAbsolutePath();
            TextFieldEncryptKeyFile.setText(filename);
            if (EncryptKeyFile.isFile())
            {    EncryptKeyFile.setReady(true);}
        } catch (Exception e) {
            System.out.println("Problem with try catch statement " + e.getMessage()); // debug statement can delete
            TextFieldEncryptKeyFile.setText("Problem with Encryption Key File");
            EncryptKeyFile.setReady(false);
        } 
        labelDone1.setText("Done");
        // chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
    }//GEN-LAST:event_buttonBrowseActionPerformed

    private void TextFieldEncryptKeyFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldEncryptKeyFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldEncryptKeyFileActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        dispose();
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void ButtonTargetFilePathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonTargetFilePathActionPerformed
        // Source file/s for Encryption 
        comboBoxFileType.setEnabled(true);
        
        try {
            JFileChooser chooser = new JFileChooser(SetupFile.FILE_PATH);
            chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            chooser.showOpenDialog(null);
            File file = chooser.getSelectedFile();
            filesPreEncrypt = new FileIntegrityStatus(file);
            filesPreEncrypt.updateFileData();
            String filename = file.getAbsolutePath();
            filesPreEncrypt.updateFileType(comboBoxFileType.getItemAt(comboBoxFileType.getSelectedIndex()));
            System.out.println("Selected filetype =  " + filesPreEncrypt.getFileType()); // debug line
            updateFileList();
            if (filesPreEncrypt.getNosOfFiles()>0)
            {
                filesPreEncrypt.setReady(true) ;
            }
            if (EncryptKeyFile.isReady() && filesPreEncrypt.isReady())
            {
                buttonBrowseTarget.setEnabled(true);
            }
            
            
            
            textFieldSourceFile.setText(filename);
            filesPreEncrypt.statusOfFileList();
        } catch (Exception e) {
            System.out.println("Problem with try catch statement in Source File selection"); // debug statement can delete
            TextFieldEncryptKeyFile.setText("Problem with selected File(s)");
            filesPreEncrypt.setReady(false) ;
        } 
        
        if (filesPreEncrypt.isDirectory()){
            labelDone2.setText("All Files in this directory");
            }
            else if (filesPreEncrypt.isFile()) {
             labelDone2.setText("Done single file");
             // Disable Filetype selector
             comboBoxFileType.setEnabled(false);
            }
            else {labelDone2.setText("Try again - invalid File");} 
    }//GEN-LAST:event_ButtonTargetFilePathActionPerformed

    private void comboBoxFileTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxFileTypeActionPerformed
        
        if ((filesPreEncrypt != null) && (filesPreEncrypt instanceof FileIntegrityStatus) && (filesPreEncrypt.isDirectory)){
        updateFileList();
        }
    }//GEN-LAST:event_comboBoxFileTypeActionPerformed

    private void buttonBrowseTargetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBrowseTargetActionPerformed
        // TODO add your handling code here:
        
        try {
            JFileChooser chooser = new JFileChooser(SetupFile.FILE_PATH);
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            chooser.showOpenDialog(null);
            File file = chooser.getSelectedFile();
            
            String filename = file.getAbsolutePath();
            textFieldEncrptedDirectory.setText(filename);
            
            filesPostEncrypt = new FileIntegrityStatus(file);
            System.out.println("Selected PostEncrypt is directory =  " + filesPreEncrypt.isDirectory());
            
            
        } catch (Exception e) {
            System.out.println("buttonBrowseTargetActionPerformed method error =" + e.getMessage());
            filesPostEncrypt.setReady(false);
        }
        finally {
            filesPostEncrypt.setReady(true);
        }
        
        
    }//GEN-LAST:event_buttonBrowseTargetActionPerformed

    public void updateFileList() {
        // TODO add your handling code here:
        
        
            filesPreEncrypt.updateFileType(comboBoxFileType.getItemAt(comboBoxFileType.getSelectedIndex()));
            filesPreEncrypt.updateFileredList();
            comboBoxSelectedFiles.setModel(filesPreEncrypt.getChosenFilesCombo());
            filesPreEncrypt.statusOfFileList();  // debug line
            labelSelectedFiles.setText(filesPreEncrypt.getNosOfFiles()+ " Files have been selected");
            //filesPreEncrypt.updateFileNamesFromPaths();
            //filesPreEncrypt.getChosenFilesCombo();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EncryptFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EncryptFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EncryptFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EncryptFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EncryptFile().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonTargetFilePath;
    private javax.swing.JLabel LabelEncryptKeyFile;
    private javax.swing.JLabel LabelSourceFile;
    private javax.swing.JTextField TextFieldEncryptKeyFile;
    private javax.swing.JButton buttonBrowse;
    private javax.swing.JButton buttonBrowseTarget;
    private javax.swing.JComboBox<String> comboBoxFileType;
    private javax.swing.JComboBox<String> comboBoxSelectedFiles;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel label1;
    private javax.swing.JLabel labelDone1;
    private javax.swing.JLabel labelDone2;
    private javax.swing.JLabel labelErrorMessage;
    private javax.swing.JLabel labelSelectDirectMessage;
    private javax.swing.JLabel labelSelectedFiles;
    private javax.swing.JTextField textFieldEncrptedDirectory;
    private javax.swing.JTextField textFieldSourceFile;
    // End of variables declaration//GEN-END:variables

    
}
